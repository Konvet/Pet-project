from aiogram import BaseMiddleware
from aiogram.types import Message, TelegramObject
from typing import Callable, Dict, Awaitable, Any

from app1.database.requests import save_user_message


class SaveUserMessageMiddleware(BaseMiddleware):

    async def __call__(
        self,
        handler: Callable[[Message, Dict[str, Any]], Awaitable[TelegramObject]],
        event: Message,
        data: Dict[str, Any]
    ) -> Any:
        # –≠—Ç–æ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –¥–æ –≤—ã–∑–æ–≤–∞ —Ö—ç–Ω–¥–ª–µ—Ä–∞
        if event.text:
            aiogram_user = event.from_user
            message_data = event.text
            await save_user_message(aiogram_user, message_data)
            print("üì© [MIDDLEWARE] –°–æ–æ–±—â–µ–Ω–∏–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ:", event.text)

        # –í—ã–∑—ã–≤–∞–µ–º —Ö—ç–Ω–¥–ª–µ—Ä
        return await handler(event, data)